# docker-compose.yml   – ohne "version:" + funktionierender ClickHouse-Health-Check
###############################################################################
#  STACK
#  • Core-App      : Postgres + FastAPI backend + Vite/React frontend
#  • Observability : Langfuse (Postgres + ClickHouse + MinIO)
#  • Reverse Proxy : Nginx
###############################################################################
services:
  # ─────────────── Core-App ───────────────
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    ports: ["${POSTGRES_HOST_PORT}:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    restart: unless-stopped
    env_file: .env
    expose: ["8000"]
    depends_on:
      postgres: { condition: service_healthy }

  frontend:
    build: ./frontend
    restart: unless-stopped
    expose: ["80"]

  # ───────────── Langfuse Stack ────────────
  langfuse-db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB:       langfuse
      POSTGRES_USER:     langfuse
      POSTGRES_PASSWORD: "${LANGFUSE_DB_PASSWORD}"
    volumes: [langfuse_dbdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langfuse -d langfuse"]
      interval: 5s
      timeout: 3s
      retries: 5

  clickhouse:
    image: clickhouse/clickhouse-server:24.3
    restart: unless-stopped
    environment:
      CLICKHOUSE_USER:     "${CLICKHOUSE_USER}"
      CLICKHOUSE_PASSWORD: "${CLICKHOUSE_PASSWORD}"
    volumes: [clickhouse_data:/var/lib/clickhouse]
    expose: ["8123", "9000"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 3s
      retries: 10

  langfuse-minio:
    image: quay.io/minio/minio:RELEASE.2024-04-18T19-09-19Z
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER:     langfuse
      MINIO_ROOT_PASSWORD: "${LANGFUSE_MINIO_PASSWORD}"
    volumes: [langfuse_minio:/data]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 10

  langfuse-minio-init:
    image: quay.io/minio/mc
    depends_on:
      langfuse-minio: { condition: service_healthy }
    entrypoint: >
      /bin/sh -c "
        set -e
        mc alias set minio http://langfuse-minio:9000 langfuse ${LANGFUSE_MINIO_PASSWORD} --quiet &&
        (mc ls minio/langfuse >/dev/null 2>&1 || mc mb -q minio/langfuse) &&
        mc policy set download minio/langfuse
      "
    restart: "no"

  langfuse:
    image: ghcr.io/langfuse/langfuse:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_URL: "postgresql://langfuse:${LANGFUSE_DB_PASSWORD}@langfuse-db:5432/langfuse"
      CLICKHOUSE_URL:             "${CLICKHOUSE_URL}"
      CLICKHOUSE_MIGRATION_URL:   "${CLICKHOUSE_MIGRATION_URL}"
      CLICKHOUSE_USER:            "${CLICKHOUSE_USER}"
      CLICKHOUSE_PASSWORD:        "${CLICKHOUSE_PASSWORD}"
      CLICKHOUSE_CLUSTER_ENABLED: "${CLICKHOUSE_CLUSTER_ENABLED}"
      S3_ENDPOINT:      "http://langfuse-minio:9000"
      S3_ACCESS_KEY:    "langfuse"
      S3_SECRET_KEY:    "${LANGFUSE_MINIO_PASSWORD}"
      S3_PUBLIC_BUCKET: "langfuse"
    expose: ["3000"]
    depends_on:
      clickhouse:          { condition: service_healthy }
      langfuse-db:         { condition: service_healthy }
      langfuse-minio-init: { condition: service_completed_successfully }

  # ───────────── Reverse-Proxy ─────────────
  proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports: ["80:80"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - frontend
      - backend
      - langfuse

# ─────────────────── Volumes ──────────────────
volumes:
  pgdata:
  langfuse_dbdata:
  clickhouse_data:
  langfuse_minio:
