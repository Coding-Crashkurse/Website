###############################################################################
#  STACK
#  • Core App      : Postgres + FastAPI backend + Vite/React frontend
#  • Reverse Proxy : Nginx
###############################################################################
services:
  # ─────────────── Core-App ───────────────
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    ports: ["${POSTGRES_HOST_PORT}:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    restart: unless-stopped
    env_file: .env
    expose: ["8000"]
    depends_on:
      postgres: { condition: service_healthy }

  frontend:
    build: ./frontend
    restart: unless-stopped
    expose: ["80"]

  # ───────────── Reverse-Proxy ─────────────
  proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports: ["80:80"]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - frontend
      - backend

# ─────────────────── Volumes ──────────────────
volumes:
  pgdata:
